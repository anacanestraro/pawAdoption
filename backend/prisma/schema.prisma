generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int     @id @default(autoincrement())
  name  String
  email String  @unique
}

model Endereco {
  id  Int @id @default(autoincrement())
  cep String @db.VarChar(9)
  logradouro String @db.VarChar(255)
  numero String? @db.VarChar(20)
  complemento String? @db.VarChar(100)
  bairro String @db.VarChar(100)
  cidade String @db.VarChar(100)
  estado String @db.VarChar(2)
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  deleted_at  DateTime?


  usuario_id   Int?     @unique
  usuario Usuario? @relation(fields: [usuario_id], references: [id])
}

enum Tipo_usuario {
  ADOTANTE
  ABRIGO
  ADMINISTRADOR
}

model Usuario{
  id  Int  @id @default(autoincrement())
  email String  @unique
  senha_hash String?  
  nome  String @db.VarChar(100)
  telefone String? @db.VarChar(20)
  tipo_usuario Tipo_usuario
  ativo Boolean @default(true)
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  deleted_at  DateTime?

  adotante Adotante?
  abrigo Abrigo?
  administrador Administrador?

  endereco  Endereco?

}

model Adotante {
  usuario_id  Int @id
  cpf String @unique @db.VarChar(14)
  data_nascimento DateTime?
  lar_temporario  Boolean @default(false)
  capacidade_lar_temporario Int?
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  deleted_at  DateTime?

  usuario Usuario @relation(fields: [usuario_id], references: [id])

  animais_adotados  Animal[] @relation("AnimalAdotante")
  animais_lar_temporario Animal[] @relation("AnimalLarTemporario")
}

model Abrigo {
  usuario_id Int @id 
  cnpj String @unique @db.VarChar(18)
  razao_social String @db.VarChar(255)
  capacidade Int? @default(0)
  sobre String? @db.Text
  site_url String? @db.VarChar(255)
  redes_sociais String? @db.Text
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  deleted_at  DateTime?

  usuario Usuario @relation(fields: [usuario_id], references: [id])
  animais Animal[] @relation("AnimalAbrigo")
}

model Administrador {
  usuario_id Int @id
  nivel_acesso Int @default(1)
  departamento String @db.VarChar(100)
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  deleted_at  DateTime?

  usuario Usuario @relation(fields: [usuario_id], references:[id])
}

enum Porte {
  PEQUENO
  MEDIO
  GRANDE
}

enum Sexo {
  FEMEA 
  MACHO
}

enum Status {
  DISPONIVEL
  ADOTADO
  PROCESSO_ADOCAO
}

model Animal {
  id  Int  @id @default(autoincrement()) 
  nome String @db.VarChar(100)
  especie String @db.VarChar(50)
  raca String? @db.VarChar(100)
  idade Int?
  porte Porte
  sexo Sexo 
  descricao String? @db.Text
  status Status @default(DISPONIVEL)
  data_adocao DateTime?
  created_at DateTime @default(now())

  abrigo_id Int?
  abrigo Abrigo? @relation("AnimalAbrigo", fields: [abrigo_id], references: [usuario_id])

  lar_temporario_id Int?
  lar_temporario Adotante? @relation("AnimalLarTemporario", fields: [lar_temporario_id], references: [usuario_id])

  adotante_id Int?
  adotante Adotante? @relation("AnimalAdotante", fields: [adotante_id], references: [usuario_id])
}